#!groovy
//  groovy Jenkinsfile
properties([disableConcurrentBuilds()])

pipeline  {
    agent { 
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        //stage("Print hello"){
            //steps {
             //   sh '''
                 //   echo "Hello world!";
                 //   cat /etc/os-release
                 //   df -h
               // '''
            //    
           // }
       // }
        stage("Create docker image") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    sh "docker build -t stanislav437/testsite . "
                }
           }
        }
        stage("docker login") {
           steps {
               echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'DockerHub-Credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                    docker login -u $USERNAME -p $PASSWORD
                   '''
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== pushing image =================="
                sh '''
                docker push stanislav437/testsite
                '''
            }
        }
        stage("docker stop") {
            steps {
                echo " ============== stoping all images =================="
                sh '''
                docker stop $(docker ps -a -q)
                '''
            }
        } 
        stage("docker remove") {
            steps {
                echo " ============== removing all docker containers =================="
                sh '''
                docker rm $(docker ps -a -q)
                '''
            }
        }
        stage("docker run") {
            steps {
                echo " ============== starting chatterbox server =================="
                sh '''
                docker run -d --restart=always --name webserver -p 80:80 stanislav437/testsite
                '''
            }
        }
        // stage("Deploy to stage server") {
        //     steps {
        //         echo " ============== Running playbook =================="
        //         sh '''
        //         ansible-playbook toolbox/ansible/playbooks/demloyToStageServer.yml
        //         '''
        //     }
        //}

   }
}
